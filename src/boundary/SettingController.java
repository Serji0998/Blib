package boundary;

import java.net.URL;
import java.util.ArrayList;
import java.util.ResourceBundle;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import control.UserController;
import entity.Borrows;
import entity.ConstantsAndGlobalVars;
import entity.User;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.paint.Color;
import javafx.stage.Modality;
import javafx.stage.Stage;

/**
 * this class is responsible for changing the settings of a user. can only
 * change email and phone number.
 */
public class SettingController {
	/**
	 * instance variables: userController - an instance of UserController to use
	 * when saving the changes made to the settings. result - the return result of
	 * the change (failed, succeeded). currentUser - the currently logged in user.
	 */
	UserController userController;
	boolean result;
	private User currentUser;

	@FXML
	private Label successOrFailLabel;

	@FXML
	private TextField phoneNumberTF;

	@FXML
	private TextField emailTF;

	@FXML
	private Button saveButton;

	@FXML
	private Button cancelButton;

	@FXML
	private Button editPhoneButton;

	@FXML
	private Button editEmail;

	@FXML
	private Label firstNameLabel;

	@FXML
	private Label IDlabel;

	@FXML
	private Label lastNameLabel;

	/**
	 * closes the current window
	 * 
	 * @param event - auto-generated by SceneBuilder.
	 */
	@FXML
	void OnClickCancel(ActionEvent event) {
		closeSettingWindow();
	}

	/**
	 * saves the changes made to the settings.
	 * 
	 * @param event - auto-generated by SceneBuilder.
	 * @throws InterruptedException -
	 *                              {@link control.UserController#updateSetting(User)}
	 *                              uses semaphores (@see
	 *                              control.UserController#updateSetting(User)) and
	 *                              throws an InterruptedException should acquiring
	 *                              the semaphore encounter a problem.
	 */

	@FXML
	void OnClickSave(ActionEvent event) throws InterruptedException {
		Pattern p = Pattern.compile("[a-zA-Z0-9][a-zA-Z0-9._]*@[a-zA-Z0-9]+([.][a-zA-Z]+)+");
		Matcher m = p.matcher(emailTF.getText());
		if (m.find() && m.group().equals(emailTF.getText())) {
			currentUser.setEmail(emailTF.getText());
			currentUser.setPhoneNumber(phoneNumberTF.getText());
			result = userController.updateSetting(currentUser);
			if (result) {
				successOrFailLabel.setText("update successful!");
				successOrFailLabel.setTextFill(Color.GREEN);
			} else {
				successOrFailLabel.setText("Update fail!");
				successOrFailLabel.setTextFill(Color.RED);
			}
		} else {
			successOrFailLabel.setText("Wrong mail!");
			successOrFailLabel.setTextFill(Color.RED);
		}

	}

	/**
	 * changes the email textField to editable.
	 * 
	 * @param event - auto-generated by SceneBuilder.
	 */
	@FXML
	void onEditEmail(ActionEvent event) {
		emailTF.setEditable(true);
		emailTF.setStyle("-fx-border-color: green;" + "-fx-border-width: 2;");
	}

	/**
	 * changes the phone number textField to editable.
	 * 
	 * @param event - auto-generated by SceneBuilder.
	 */
	@FXML
	void onEditPhone(ActionEvent event) {
		phoneNumberTF.setEditable(true);
		phoneNumberTF.setStyle("-fx-border-color: green;" + "-fx-border-width: 2;");
	}

	/**
	 * called upon loading the FXML file, initializes some GUI elements and instance
	 * variables.
	 */
	@FXML
	void initialize() {
		userController = UserController.getInstance(ConstantsAndGlobalVars.ipAddress,
				ConstantsAndGlobalVars.DEFAULT_PORT);

		emailTF.setEditable(false);
		phoneNumberTF.setEditable(false);
	}

	public void closeSettingWindow() {
		Stage window = (Stage) cancelButton.getScene().getWindow();
		window.close();
	}

	/**
	 * loads the user being edited into an instance variable and loads the details
	 * into GUI elements.
	 * 
	 * @param currentUser - the user for which to change the settings.
	 */
	public void loadUser(User currentUser) {
		this.currentUser = currentUser;
		phoneNumberTF.setText(currentUser.getPhoneNumber());
		emailTF.setText(currentUser.getEmail());
		firstNameLabel.setText(currentUser.getFirstName());
		IDlabel.setText(currentUser.getUserID());
		lastNameLabel.setText(currentUser.getLastName());
	}

}
