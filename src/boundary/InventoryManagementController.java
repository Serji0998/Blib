package boundary;

import java.io.IOException;

import control.BookController;
import control.BookCopyController;
import entity.Book;
import entity.ConstantsAndGlobalVars;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.paint.Color;
import javafx.stage.Modality;
import javafx.stage.Stage;

/**
 * This is the GUI controller responsible for handling all events of the
 * "Inventory management" functionality. (e.g. "Add Book", "Edit Book", "Remove
 * Book",etc.)
 */
public class InventoryManagementController {
	/**
	 * instance variables: bookController - an instance of BookController to use
	 * when removing a book.
	 */
	private BookController bookController;

	@FXML
	private Label numberOfBooksLabel;

	@FXML
	private Button cancelButton;

	@FXML
	private Button addButton;

	@FXML
	private TextField insertCatalogNumberTF;

	@FXML
	private Button removeButton;

	@FXML
	private TextField insertCatalogNumberTF_update;

	@FXML
	private Button updateButton;

	@FXML
	private Label resultLabel;

	@FXML
	private Button addCopyButton;

	/**
	 * opens the window responsible for adding a new book copy.
	 * 
	 * @param event - auto-generating by SceneBuilder.
	 * @throws IOException - thrown if loading the FXML file fails.
	 */
	@FXML
	void addCopyHandler(ActionEvent event) throws IOException {
		Stage primaryStage = (Stage) addButton.getScene().getWindow();
		FXMLLoader loader = new FXMLLoader();
		Parent root = loader.load(getClass().getResource("/boundary/AddBookCopyGUI.fxml").openStream());
		primaryStage.setScene(new Scene(root));
		primaryStage.setTitle("Add new Copy");
		primaryStage.show();
	}

	/**
	 * opens the window responsible for book addition.
	 * 
	 * @param event - auto-generated by SceneBuilder
	 * @throws IOException - thrown if loading the FXML file fails.
	 */
	@FXML
	void addHandler(ActionEvent event) throws IOException {
		Stage primaryStage = (Stage) addButton.getScene().getWindow();
		FXMLLoader loader = new FXMLLoader();
		Parent root = loader.load(getClass().getResource("/boundary/AddBookGUI.fxml").openStream());
		primaryStage.setScene(new Scene(root));
		primaryStage.setTitle("Add new Book");
		primaryStage.show();
	}

	/**
	 * closes the current window (goes back to the librarian page).
	 * 
	 * @param event - auto-generated by SceneBuilder.
	 */
	@FXML
	void cancelHandler(ActionEvent event) {
		((Stage) cancelButton.getScene().getWindow()).close();
	}

	/**
	 * This method is responsible for book deletion. it gets the catalogue number
	 * from the respective textField, calls the
	 * {@link control.BookController#removeBook(String)} method. by the end of the
	 * operation it displays feedback to the user (success, failure) and updates the
	 * label that displays total number of books in the library inventory.
	 * 
	 * @param event - auto-generated by SceneBuilder.
	 */
	@FXML
	void removeHandler(ActionEvent event) {
		if (insertCatalogNumberTF.getText().isEmpty()) {
			insertCatalogNumberTF.setStyle("-fx-promptText-fill: red; -fx-border-color: red;");
			insertCatalogNumberTF.setPromptText("Require field");
			return;
		}
		if (bookController.removeBook(insertCatalogNumberTF.getText())) {
			resultLabel.setText("Book removed successfully");
			resultLabel.setTextFill(Color.GREEN);
			int numberOfBooks = bookController.getNumberOfBooks();
			numberOfBooksLabel.setText(String.valueOf(numberOfBooks));
		} else {
			resultLabel.setText("Book doesn't exist");
			resultLabel.setTextFill(Color.RED);
		}

	}

	/**
	 * opens the window responsible for updating a book. it gets the catalogue
	 * number from the respective textField (checks if it's empty and displays an
	 * error if need be) calls the
	 * {@link boundary.EditBookController#loadBook(Book)} method.
	 * 
	 * @param event - auto-generated by SceneBuilder.
	 * @throws IOException - thrown should loading the FXML file encounter a
	 *                     problem.
	 */
	@FXML
	void updateHandler(ActionEvent event) throws IOException {
		String catalogNumber = insertCatalogNumberTF_update.getText();
		if (catalogNumber.isEmpty()) {
			insertCatalogNumberTF_update.setStyle("-fx-text-fill: red; -fx-border-color: red;");
			insertCatalogNumberTF_update.setPromptText("Require field");
			return;
		}
		Book bookToEdit = bookController.getBook(catalogNumber);
		if (bookToEdit == null) {
			resultLabel.setText("Book doesn't exist");
			resultLabel.setTextFill(Color.RED);
			return;
		} else {
			resultLabel.setText("Book exists");
			resultLabel.setTextFill(Color.GREEN);
		}
		Stage primaryStage = (Stage) updateButton.getScene().getWindow();
		FXMLLoader loader = new FXMLLoader();
		Parent root = loader.load(getClass().getResource("/boundary/EditBookGUI.fxml").openStream());
		primaryStage.setScene(new Scene(root));
		primaryStage.setTitle("Edit Book");
		EditBookController ebc = loader.getController();
		ebc.loadBook(bookToEdit);
		primaryStage.show();
	}

	/**
	 * Called upon loading the FXML file. it initialises some instance variable and
	 * calls the {@link control.BookController#getNumberOfBooks()} method to get
	 * total number of books in the library.
	 */
	@FXML
	void initialize() {
		bookController = BookController.getInstance(ConstantsAndGlobalVars.ipAddress,
				ConstantsAndGlobalVars.DEFAULT_PORT);
		int numberOfBooks = bookController.getNumberOfBooks();
		numberOfBooksLabel.setText(String.valueOf(numberOfBooks));
	}
}
