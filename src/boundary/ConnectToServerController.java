package boundary;

import java.io.IOException;

import control.ReaderController;
import control.UserController;
import entity.ConstantsAndGlobalVars;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.stage.Modality;
import javafx.stage.Stage;

/**
 * This class is responsible for connecting to the server from the client side.
 */
public class ConnectToServerController {

	@FXML
	private TextField ipTF;

	@FXML
	private Button connectButton;

	@FXML
	private Label errorLabel;

	/**
	 * gets the IP address of the server from the user (input via a textField), if
	 * the the textField is empty an error is displayed. Otherwise, it saves the IP
	 * address in a global variable for later use (establishing a connection in
	 * different parts of the system) and the main page is opened.
	 * 
	 * @param event - auto-generated by Scene Builder
	 * @throws IOException - thrown if loading the FXML file fails.
	 */
	@FXML
	void connectHandler(ActionEvent event) throws IOException {
		String ip = ipTF.getText();
		if (ip.isEmpty()) {
			errorLabel.setVisible(true);
			return;
		}
		ConstantsAndGlobalVars.ipAddress = ip;
		Stage primaryStage = new Stage();
		FXMLLoader loader = new FXMLLoader();
		Parent root = loader.load(getClass().getResource("/boundary/MainPageGUI.fxml").openStream());
		primaryStage.setScene(new Scene(root));
		primaryStage.setTitle("Home Page");
		primaryStage.setOnCloseRequest(e -> close());
		((Stage) connectButton.getScene().getWindow()).close();
		primaryStage.show();
	}

	/**
	 * the method to be called should the user close the window(either by the X
	 * button on the top left corner of the window or by pressing alt-F4) it
	 * disconnects the all clients from the server and exits.
	 */
	private void close() {
		UserController uc = UserController.getInstance(ConstantsAndGlobalVars.ipAddress,
				ConstantsAndGlobalVars.DEFAULT_PORT);
		uc.disconnectClient();
		ReaderController rc = ReaderController.getInstance(ConstantsAndGlobalVars.ipAddress,
				ConstantsAndGlobalVars.DEFAULT_PORT);
		rc.disconnectClient();
		System.exit(0);
	}
}
