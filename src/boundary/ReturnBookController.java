package boundary;

import java.net.URL;
import java.util.ArrayList;
import java.util.ResourceBundle;

import control.LibrarianController;
import entity.ConstantsAndGlobalVars;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.paint.Color;
import javafx.stage.Stage;

/**
 * This class is responsible for facilitating the return book operation to the
 * librarian. it provides an easy to use interface for that operation.
 */
public class ReturnBookController {
	/**
	 * instance variables: librarianController - an instance variable of
	 * LibrarianController to use when requesting the return from the server.
	 */
	LibrarianController librarianController;
	@FXML
	private TextField barcodeTF;

	@FXML
	private Button returnButton;

	@FXML
	private Button cancelButton;

	@FXML
	private Label resultReturnBook;
	@FXML
	private Label resultStatus;

	/**
	 * closes the current window.
	 * 
	 * @param event - auto-generated by SceneBuilder.
	 */
	@FXML
	void OnClickCancel(ActionEvent event) {
		closeReturnBookWindow();
	}

	/**
	 * This method calls the
	 * {@link control.LibrarianController#updateReturnBook(String)} method to update
	 * the DB, receives a response and displays it.
	 * 
	 * @param event - auto-generated by SceneBuilder.
	 * @throws InterruptedException -
	 *                              {@link control.LibrarianController#updateReturnBook(String)}
	 *                              uses semaphores (@see
	 *                              control.LibrarianController#updateReturnBook(String))
	 *                              and throws an InterruptedException should
	 *                              acquiring the semaphore encounter a problem.
	 */
	@FXML
	void onClickReturn(ActionEvent event) throws InterruptedException {
		ArrayList<String> returnBookResult = librarianController.updateReturnBook(barcodeTF.getText());
		// set feedback

		resultReturnBook.setText("");
		resultStatus.setVisible(false);

		for (String feedbackRES : returnBookResult) {
			if (feedbackRES.equals("book returned successfully!")) {
				resultReturnBook.setText("book returned successfully!");
				resultReturnBook.setTextFill(Color.GREEN);
			}
			if (feedbackRES.equals("unFreeze success")) {
				resultStatus.setVisible(true);
			}

			if (feedbackRES.equals("Barcode not exist")) {
				resultReturnBook.setText("Barcode not exist");
				resultReturnBook.setTextFill(Color.RED);
			}
			if (feedbackRES.equals("No one has borrowed the book")) {
				resultReturnBook.setText("No one has borrowed the book");
				resultReturnBook.setTextFill(Color.RED);
			}
			if (feedbackRES.equals("return copy has not updated successfully!")) {
				resultReturnBook.setText("return copy has not updated successfully!");
				resultReturnBook.setTextFill(Color.RED);
			}

			if (feedbackRES.equals("User has no late returns!")) {
				resultReturnBook.setText("User has no late returns!");
				resultReturnBook.setTextFill(Color.RED);
			}

		}

	}

	/**
	 * called upon loading the FXML file, initialises some GUI elements and instance
	 * variables.
	 */
	@FXML
	void initialize() {
		librarianController = LibrarianController.getInstance(ConstantsAndGlobalVars.ipAddress,
				ConstantsAndGlobalVars.DEFAULT_PORT);
	}

	public void closeReturnBookWindow() {
		Stage window = (Stage) cancelButton.getScene().getWindow();
		window.close();
	}

}
